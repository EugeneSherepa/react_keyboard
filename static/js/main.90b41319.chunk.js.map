{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","key","code","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,YAAc,SAACC,GACb,IAAMC,EAAQD,EAARC,IAEa,UAAfD,EAAME,OACRD,EAAMD,EAAME,MAGd,EAAKC,SAAS,CAAEL,WAAYG,KApBhC,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,eAV/C,oBAuBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAU,mCACqBA,EADrB,KAEP,kCA/Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.90b41319.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | null,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    let { key } = event;\n\n    if (event.code === 'Space') {\n      key = event.code;\n    }\n\n    this.setState({ pressedKey: key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}